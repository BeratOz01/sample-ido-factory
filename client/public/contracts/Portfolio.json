{
  "contractName": "Portfolio",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "factoryContract",
      "outputs": [
        {
          "internalType": "contract Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Factory",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactoryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyPortfolio",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "saleName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "vestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "distributionDates",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "isPortionWithdrawn",
              "type": "bool[]"
            },
            {
              "internalType": "bool",
              "name": "isFinished",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "saleAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IDOLib.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyERC20s",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IDOLib.ERC20[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getInvestment",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "saleName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "vestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "distributionDates",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "isPortionWithdrawn",
              "type": "bool[]"
            },
            {
              "internalType": "bool",
              "name": "isFinished",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "saleAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IDOLib.Investment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_saleId",
          "type": "uint256"
        }
      ],
      "name": "isInvesmentExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "saleName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "vestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "distributionDates",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "isPortionWithdrawn",
              "type": "bool[]"
            },
            {
              "internalType": "bool",
              "name": "isFinished",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "saleAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IDOLib.Investment",
          "name": "_invesment",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "addPortfolio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "saleID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newWithdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool[]",
          "name": "newPortionArray",
          "type": "bool[]"
        }
      ],
      "name": "updatePortolio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenCreator",
          "type": "address"
        }
      ],
      "name": "setTokenCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionDates\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"isPortionWithdrawn\",\"type\":\"bool[]\"},{\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDOLib.Investment\",\"name\":\"_invesment\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addPortfolio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryContract\",\"outputs\":[{\"internalType\":\"contract Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getInvestment\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionDates\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"isPortionWithdrawn\",\"type\":\"bool[]\"},{\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDOLib.Investment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyERC20s\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDOLib.ERC20[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyPortfolio\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionDates\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"isPortionWithdrawn\",\"type\":\"bool[]\"},{\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDOLib.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"}],\"name\":\"isInvesmentExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Factory\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactoryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCreator\",\"type\":\"address\"}],\"name\":\"setTokenCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"saleID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newWithdrawnAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool[]\",\"name\":\"newPortionArray\",\"type\":\"bool[]\"}],\"name\":\"updatePortolio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Portfolio.sol\":\"Portfolio\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0x54b9bcf67cdf3973faae7779b4a056034a1006d5214dd95216d788c9b695e01a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f355ba35f2b75ff855399541f7aabfca2a88bba1ceefee3b70ecfe1c491ae22d\",\"dweb:/ipfs/QmcMDctKR2bmeHYW6YyahPFqV149np7LfxKKi5c44sDdBH\"]},\"project:/contracts/Portfolio.sol\":{\"keccak256\":\"0xfa3a61da54fcbfa0417c06d9c7687cb6808b9efbe9b5c50730eb76c56b9e3182\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4324c6c5da2124b491679084e7536648132e94ed39a2f68bf84cff6e58c3526\",\"dweb:/ipfs/QmVF2f3qR3XnG3ctzhZQZRSYijTxcfb49KCpe22XgS6MB4\"]},\"project:/contracts/Sale.sol\":{\"keccak256\":\"0x36ace4cfd5898a495889856fa396071f1f8917e66aed9373dda3b0fec438cf3d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4bfa1a934b339ef95f5581e2c621fdfb5de0ee253cdc199e57f8a1e9fb51b945\",\"dweb:/ipfs/QmcY8Z8FQuc11Td9bF3yAWis9QbkcyHnWDiZYKZpEHvRmw\"]},\"project:/contracts/lib/IDO.sol\":{\"keccak256\":\"0x8950c058ef87af81fee98a50f491d10e796720eefe6aae50fed0f902d89d3553\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://efae02d8255c3b47c0aa4b8ab06332c7c70ff5e3f25751fddefe0008529300ee\",\"dweb:/ipfs/QmbBTfwk6Jh2HEFWz2HoMmqKJjrHLDZFwMP7atSnNzphfG\"]}},\"version\":1}",
  "sourceMap": "410:4452:7:-:0;;;795:16;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;410:4452:7;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;410:4452:7:-;;;;;;;",
  "deployedSourceMap": "410:4452:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:410;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4748:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4309:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3099:755;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;2892:169:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1667:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2314:532:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1454:156;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;761:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1837:410:7;1920:24;;:::i;:::-;2018:1;1981:15;:27;1997:10;1981:27;;;;;;;;;;;;;;;:34;;;;:38;1960:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2105:15;:27;2121:10;2105:27;;;;;;;;;;;;;;;:34;;;;2099:3;:40;2078:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:15;:27;2224:10;2208:27;;;;;;;;;;;;;;;2236:3;2208:32;;;;;;;;:::i;:::-;;;;;;;;;;;;2201:39;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:410;;;:::o;4748:112::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4840:13:7::1;4825:12;;:28;;;;;;;;;;;;;;;;;;4748:112:::0;:::o;4309:388::-;1305:12;;;;;;;;;;;1291:26;;:10;:26;;;1270:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4506:28:::1;4537:111;;;;;;;;4563:4;4537:111;;;;4581:6;4537:111;;;;4601:11;4537:111;;;;4626:12;4537:111;;;;::::0;4506:142:::1;;4659:10;:16;4670:4;4659:16;;;;;;;;;;;;;;;4681:8;4659:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:201;4309:388:::0;;;;;:::o;3099:755::-;1077:15;;;;;;;;;;;:27;;;1105:10;1077:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1069:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3281:14:::1;3298:15;:21;3314:4;3298:21;;;;;;;;;;;;;;;:28;;;;3281:45;;3373:13;3396:452;3416:6;3408:5;:14;3396:452;;;3490:6;3451:15;:21;3467:4;3451:21;;;;;;;;;;;;;;;3473:5;3451:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;:45;3447:391;;;3584:18;3516:15;:21;3532:4;3516:21;;;;;;;;;;;;;;;3538:5;3516:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:65;;:86;;;;3691:15;3620;:21;3636:4;3620:21;;;;;;;;;;;;;;;3642:5;3620:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:68;;:86;;;;;;;;;;;;:::i;:::-;;3728:27;3739:15;3728:10;:27::i;:::-;3724:99;;;3819:4;3777:15:::0;:21:::1;3793:4;3777:21;;;;;;;;;;;;;;;3799:5;3777:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:39;;;:46;;;;;;;;;;;;;;;;;;3724:99;3447:391;3424:7;;;;;:::i;:::-;;;;3396:452;;;3271:583;;3099:755:::0;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2892:169:7:-;1077:15;;;;;;;;;;;:27;;;1105:10;1077:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1069:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3016:15:::1;:21;3032:4;3016:21;;;;;;;;;;;;;;;3043:10;3016:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2892:169:::0;;:::o;1667:115::-;1713:21;1753:10;:22;1764:10;1753:22;;;;;;;;;;;;;;;1746:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:115;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2314:532:7:-;2419:4;2439:14;2456:15;:21;2472:4;2456:21;;;;;;;;;;;;;;;:28;;;;2439:45;;2509:1;2499:6;:11;2495:29;;;2519:5;2512:12;;;;;2495:29;2572:11;2634:13;2657:159;2677:6;2669:5;:14;2657:159;;;2751:7;2712:15;:21;2728:4;2712:21;;;;;;;;;;;;;;;2734:5;2712:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;:46;2708:98;;;2787:4;2778:13;;2708:98;2685:7;;;;;:::i;:::-;;;;2657:159;;;2833:6;2826:13;;;;;2314:532;;;;;:::o;1454:156::-;1527:26;1576:15;:27;1592:10;1576:27;;;;;;;;;;;;;;;1569:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:156;:::o;861:108::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;954:8:7::1;936:15;;:26;;;;;;;;;;;;;;;;;;861:108:::0;:::o;761:27::-;;;;;;;;;;;;;:::o;694:30::-;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;3913:328:7:-;3975:4;3991:13;4007:4;3991:20;;4022:14;4039:3;:10;4022:27;;4059:13;4082:127;4102:6;4094:5;:14;4082:127;;;4138:3;4142:5;4138:10;;;;;;;;:::i;:::-;;;;;;;;4133:66;;4179:5;4168:16;;4133:66;4110:7;;;;;:::i;:::-;;;;4082:127;;;4226:8;4219:15;;;;;3913:328;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1139:99::-;1191:6;1225:5;1219:12;1209:22;;1139:99;;;:::o;1244:159::-;1318:11;1352:6;1347:3;1340:19;1392:4;1387:3;1383:14;1368:29;;1244:159;;;;:::o;1409:307::-;1477:1;1487:113;1501:6;1498:1;1495:13;1487:113;;;1586:1;1581:3;1577:11;1571:18;1567:1;1562:3;1558:11;1551:39;1523:2;1520:1;1516:10;1511:15;;1487:113;;;1618:6;1615:1;1612:13;1609:101;;;1698:1;1689:6;1684:3;1680:16;1673:27;1609:101;1458:258;1409:307;;;:::o;1722:102::-;1763:6;1814:2;1810:7;1805:2;1798:5;1794:14;1790:28;1780:38;;1722:102;;;:::o;1830:344::-;1908:3;1936:39;1969:5;1936:39;:::i;:::-;1991:61;2045:6;2040:3;1991:61;:::i;:::-;1984:68;;2061:52;2106:6;2101:3;2094:4;2087:5;2083:16;2061:52;:::i;:::-;2138:29;2160:6;2138:29;:::i;:::-;2133:3;2129:39;2122:46;;1912:262;1830:344;;;;:::o;2180:114::-;2247:6;2281:5;2275:12;2265:22;;2180:114;;;:::o;2300:174::-;2389:11;2423:6;2418:3;2411:19;2463:4;2458:3;2454:14;2439:29;;2300:174;;;;:::o;2480:132::-;2547:4;2570:3;2562:11;;2600:4;2595:3;2591:14;2583:22;;2480:132;;;:::o;2618:179::-;2687:10;2708:46;2750:3;2742:6;2708:46;:::i;:::-;2786:4;2781:3;2777:14;2763:28;;2618:179;;;;:::o;2803:113::-;2873:4;2905;2900:3;2896:14;2888:22;;2803:113;;;:::o;2952:712::-;3061:3;3090:54;3138:5;3090:54;:::i;:::-;3160:76;3229:6;3224:3;3160:76;:::i;:::-;3153:83;;3260:56;3310:5;3260:56;:::i;:::-;3339:7;3370:1;3355:284;3380:6;3377:1;3374:13;3355:284;;;3456:6;3450:13;3483:63;3542:3;3527:13;3483:63;:::i;:::-;3476:70;;3569:60;3622:6;3569:60;:::i;:::-;3559:70;;3415:224;3402:1;3399;3395:9;3390:14;;3355:284;;;3359:14;3655:3;3648:10;;3066:598;;;2952:712;;;;:::o;3670:111::-;3734:6;3768:5;3762:12;3752:22;;3670:111;;;:::o;3787:171::-;3873:11;3907:6;3902:3;3895:19;3947:4;3942:3;3938:14;3923:29;;3787:171;;;;:::o;3964:129::-;4028:4;4051:3;4043:11;;4081:4;4076:3;4072:14;4064:22;;3964:129;;;:::o;4099:90::-;4133:7;4176:5;4169:13;4162:21;4151:32;;4099:90;;;:::o;4195:99::-;4266:21;4281:5;4266:21;:::i;:::-;4261:3;4254:34;4195:99;;:::o;4300:167::-;4363:10;4384:40;4420:3;4412:6;4384:40;:::i;:::-;4456:4;4451:3;4447:14;4433:28;;4300:167;;;;:::o;4473:110::-;4540:4;4572;4567:3;4563:14;4555:22;;4473:110;;;:::o;4613:688::-;4716:3;4745:51;4790:5;4745:51;:::i;:::-;4812:73;4878:6;4873:3;4812:73;:::i;:::-;4805:80;;4909:53;4956:5;4909:53;:::i;:::-;4985:7;5016:1;5001:275;5026:6;5023:1;5020:13;5001:275;;;5102:6;5096:13;5129:57;5182:3;5167:13;5129:57;:::i;:::-;5122:64;;5209:57;5259:6;5209:57;:::i;:::-;5199:67;;5061:215;5048:1;5045;5041:9;5036:14;;5001:275;;;5005:14;5292:3;5285:10;;4721:580;;;4613:688;;;;:::o;5307:126::-;5344:7;5384:42;5377:5;5373:54;5362:65;;5307:126;;;:::o;5439:96::-;5476:7;5505:24;5523:5;5505:24;:::i;:::-;5494:35;;5439:96;;;:::o;5541:108::-;5618:24;5636:5;5618:24;:::i;:::-;5613:3;5606:37;5541:108;;:::o;5715:2278::-;5840:3;5876:6;5871:3;5867:16;5967:4;5960:5;5956:16;5950:23;5986:63;6043:4;6038:3;6034:14;6020:12;5986:63;:::i;:::-;5893:166;6145:4;6138:5;6134:16;6128:23;6198:3;6192:4;6188:14;6181:4;6176:3;6172:14;6165:38;6224:73;6292:4;6278:12;6224:73;:::i;:::-;6216:81;;6069:239;6398:4;6391:5;6387:16;6381:23;6417:63;6474:4;6469:3;6465:14;6451:12;6417:63;:::i;:::-;6318:172;6583:4;6576:5;6572:16;6566:23;6602:63;6659:4;6654:3;6650:14;6636:12;6602:63;:::i;:::-;6500:175;6758:4;6751:5;6747:16;6741:23;6777:63;6834:4;6829:3;6825:14;6811:12;6777:63;:::i;:::-;6685:165;6945:4;6938:5;6934:16;6928:23;6998:3;6992:4;6988:14;6981:4;6976:3;6972:14;6965:38;7024:103;7122:4;7108:12;7024:103;:::i;:::-;7016:111;;6860:278;7234:4;7227:5;7223:16;7217:23;7287:3;7281:4;7277:14;7270:4;7265:3;7261:14;7254:38;7313:97;7405:4;7391:12;7313:97;:::i;:::-;7305:105;;7148:273;7509:4;7502:5;7498:16;7492:23;7528:57;7579:4;7574:3;7570:14;7556:12;7528:57;:::i;:::-;7431:164;7685:6;7678:5;7674:18;7668:25;7706:65;7763:6;7758:3;7754:16;7740:12;7706:65;:::i;:::-;7605:176;7870:6;7863:5;7859:18;7853:25;7891:65;7948:6;7943:3;7939:16;7925:12;7891:65;:::i;:::-;7791:175;7983:4;7976:11;;5845:2148;5715:2278;;;;:::o;7999:385::-;8148:4;8186:2;8175:9;8171:18;8163:26;;8235:9;8229:4;8225:20;8221:1;8210:9;8206:17;8199:47;8263:114;8372:4;8363:6;8263:114;:::i;:::-;8255:122;;7999:385;;;;:::o;8390:122::-;8463:24;8481:5;8463:24;:::i;:::-;8456:5;8453:35;8443:63;;8502:1;8499;8492:12;8443:63;8390:122;:::o;8518:139::-;8564:5;8602:6;8589:20;8580:29;;8618:33;8645:5;8618:33;:::i;:::-;8518:139;;;;:::o;8663:329::-;8722:6;8771:2;8759:9;8750:7;8746:23;8742:32;8739:119;;;8777:79;;:::i;:::-;8739:119;8897:1;8922:53;8967:7;8958:6;8947:9;8943:22;8922:53;:::i;:::-;8912:63;;8868:117;8663:329;;;;:::o;8998:117::-;9107:1;9104;9097:12;9121:117;9230:1;9227;9220:12;9244:180;9292:77;9289:1;9282:88;9389:4;9386:1;9379:15;9413:4;9410:1;9403:15;9430:281;9513:27;9535:4;9513:27;:::i;:::-;9505:6;9501:40;9643:6;9631:10;9628:22;9607:18;9595:10;9592:34;9589:62;9586:88;;;9654:18;;:::i;:::-;9586:88;9694:10;9690:2;9683:22;9473:238;9430:281;;:::o;9717:129::-;9751:6;9778:20;;:::i;:::-;9768:30;;9807:33;9835:4;9827:6;9807:33;:::i;:::-;9717:129;;;:::o;9852:308::-;9914:4;10004:18;9996:6;9993:30;9990:56;;;10026:18;;:::i;:::-;9990:56;10064:29;10086:6;10064:29;:::i;:::-;10056:37;;10148:4;10142;10138:15;10130:23;;9852:308;;;:::o;10166:154::-;10250:6;10245:3;10240;10227:30;10312:1;10303:6;10298:3;10294:16;10287:27;10166:154;;;:::o;10326:412::-;10404:5;10429:66;10445:49;10487:6;10445:49;:::i;:::-;10429:66;:::i;:::-;10420:75;;10518:6;10511:5;10504:21;10556:4;10549:5;10545:16;10594:3;10585:6;10580:3;10576:16;10573:25;10570:112;;;10601:79;;:::i;:::-;10570:112;10691:41;10725:6;10720:3;10715;10691:41;:::i;:::-;10410:328;10326:412;;;;;:::o;10758:340::-;10814:5;10863:3;10856:4;10848:6;10844:17;10840:27;10830:122;;10871:79;;:::i;:::-;10830:122;10988:6;10975:20;11013:79;11088:3;11080:6;11073:4;11065:6;11061:17;11013:79;:::i;:::-;11004:88;;10820:278;10758:340;;;;:::o;11104:1271::-;11219:6;11227;11235;11243;11251;11300:3;11288:9;11279:7;11275:23;11271:33;11268:120;;;11307:79;;:::i;:::-;11268:120;11427:1;11452:53;11497:7;11488:6;11477:9;11473:22;11452:53;:::i;:::-;11442:63;;11398:117;11582:2;11571:9;11567:18;11554:32;11613:18;11605:6;11602:30;11599:117;;;11635:79;;:::i;:::-;11599:117;11740:63;11795:7;11786:6;11775:9;11771:22;11740:63;:::i;:::-;11730:73;;11525:288;11880:2;11869:9;11865:18;11852:32;11911:18;11903:6;11900:30;11897:117;;;11933:79;;:::i;:::-;11897:117;12038:63;12093:7;12084:6;12073:9;12069:22;12038:63;:::i;:::-;12028:73;;11823:288;12150:2;12176:53;12221:7;12212:6;12201:9;12197:22;12176:53;:::i;:::-;12166:63;;12121:118;12278:3;12305:53;12350:7;12341:6;12330:9;12326:22;12305:53;:::i;:::-;12295:63;;12249:119;11104:1271;;;;;;;;:::o;12381:308::-;12455:4;12545:18;12537:6;12534:30;12531:56;;;12567:18;;:::i;:::-;12531:56;12617:4;12609:6;12605:17;12597:25;;12677:4;12671;12667:15;12659:23;;12381:308;;;:::o;12695:117::-;12804:1;12801;12794:12;12818:116;12888:21;12903:5;12888:21;:::i;:::-;12881:5;12878:32;12868:60;;12924:1;12921;12914:12;12868:60;12818:116;:::o;12940:133::-;12983:5;13021:6;13008:20;12999:29;;13037:30;13061:5;13037:30;:::i;:::-;12940:133;;;;:::o;13093:701::-;13186:5;13211:78;13227:61;13281:6;13227:61;:::i;:::-;13211:78;:::i;:::-;13202:87;;13309:5;13338:6;13331:5;13324:21;13372:4;13365:5;13361:16;13354:23;;13425:4;13417:6;13413:17;13405:6;13401:30;13454:3;13446:6;13443:15;13440:122;;;13473:79;;:::i;:::-;13440:122;13588:6;13571:217;13605:6;13600:3;13597:15;13571:217;;;13680:3;13709:34;13739:3;13727:10;13709:34;:::i;:::-;13704:3;13697:47;13773:4;13768:3;13764:14;13757:21;;13647:141;13631:4;13626:3;13622:14;13615:21;;13571:217;;;13575:21;13192:602;;13093:701;;;;;:::o;13814:364::-;13882:5;13931:3;13924:4;13916:6;13912:17;13908:27;13898:122;;13939:79;;:::i;:::-;13898:122;14056:6;14043:20;14081:91;14168:3;14160:6;14153:4;14145:6;14141:17;14081:91;:::i;:::-;14072:100;;13888:290;13814:364;;;;:::o;14184:969::-;14292:6;14300;14308;14316;14365:3;14353:9;14344:7;14340:23;14336:33;14333:120;;;14372:79;;:::i;:::-;14333:120;14492:1;14517:53;14562:7;14553:6;14542:9;14538:22;14517:53;:::i;:::-;14507:63;;14463:117;14619:2;14645:53;14690:7;14681:6;14670:9;14666:22;14645:53;:::i;:::-;14635:63;;14590:118;14747:2;14773:53;14818:7;14809:6;14798:9;14794:22;14773:53;:::i;:::-;14763:63;;14718:118;14903:2;14892:9;14888:18;14875:32;14934:18;14926:6;14923:30;14920:117;;;14956:79;;:::i;:::-;14920:117;15061:75;15128:7;15119:6;15108:9;15104:22;15061:75;:::i;:::-;15051:85;;14846:300;14184:969;;;;;;;:::o;15159:117::-;15268:1;15265;15258:12;15282:117;15391:1;15388;15381:12;15405:311;15482:4;15572:18;15564:6;15561:30;15558:56;;;15594:18;;:::i;:::-;15558:56;15644:4;15636:6;15632:17;15624:25;;15704:4;15698;15694:15;15686:23;;15405:311;;;:::o;15739:710::-;15835:5;15860:81;15876:64;15933:6;15876:64;:::i;:::-;15860:81;:::i;:::-;15851:90;;15961:5;15990:6;15983:5;15976:21;16024:4;16017:5;16013:16;16006:23;;16077:4;16069:6;16065:17;16057:6;16053:30;16106:3;16098:6;16095:15;16092:122;;;16125:79;;:::i;:::-;16092:122;16240:6;16223:220;16257:6;16252:3;16249:15;16223:220;;;16332:3;16361:37;16394:3;16382:10;16361:37;:::i;:::-;16356:3;16349:50;16428:4;16423:3;16419:14;16412:21;;16299:144;16283:4;16278:3;16274:14;16267:21;;16223:220;;;16227:21;15841:608;;15739:710;;;;;:::o;16472:370::-;16543:5;16592:3;16585:4;16577:6;16573:17;16569:27;16559:122;;16600:79;;:::i;:::-;16559:122;16717:6;16704:20;16742:94;16832:3;16824:6;16817:4;16809:6;16805:17;16742:94;:::i;:::-;16733:103;;16549:293;16472:370;;;;:::o;16880:2487::-;16957:5;17001:6;16989:9;16984:3;16980:19;16976:32;16973:119;;;17011:79;;:::i;:::-;16973:119;17110:23;17126:6;17110:23;:::i;:::-;17101:32;;17194:1;17234:49;17279:3;17270:6;17259:9;17255:22;17234:49;:::i;:::-;17227:4;17220:5;17216:16;17209:75;17143:152;17386:2;17375:9;17371:18;17358:32;17417:18;17409:6;17406:30;17403:117;;;17439:79;;:::i;:::-;17403:117;17559:59;17614:3;17605:6;17594:9;17590:22;17559:59;:::i;:::-;17552:4;17545:5;17541:16;17534:85;17305:325;17697:2;17738:49;17783:3;17774:6;17763:9;17759:22;17738:49;:::i;:::-;17731:4;17724:5;17720:16;17713:75;17640:159;17869:2;17910:49;17955:3;17946:6;17935:9;17931:22;17910:49;:::i;:::-;17903:4;17896:5;17892:16;17885:75;17809:162;18031:3;18073:49;18118:3;18109:6;18098:9;18094:22;18073:49;:::i;:::-;18066:4;18059:5;18055:16;18048:75;17981:153;18234:3;18223:9;18219:19;18206:33;18266:18;18258:6;18255:30;18252:117;;;18288:79;;:::i;:::-;18252:117;18408:74;18478:3;18469:6;18458:9;18454:22;18408:74;:::i;:::-;18401:4;18394:5;18390:16;18383:100;18144:350;18595:3;18584:9;18580:19;18567:33;18627:18;18619:6;18616:30;18613:117;;;18649:79;;:::i;:::-;18613:117;18769:71;18836:3;18827:6;18816:9;18812:22;18769:71;:::i;:::-;18762:4;18755:5;18751:16;18744:97;18504:348;18917:3;18959:46;19001:3;18992:6;18981:9;18977:22;18959:46;:::i;:::-;18952:4;18945:5;18941:16;18934:72;18862:155;19084:3;19128:49;19173:3;19164:6;19153:9;19149:22;19128:49;:::i;:::-;19119:6;19112:5;19108:18;19101:77;19027:162;19255:3;19299:49;19344:3;19335:6;19324:9;19320:22;19299:49;:::i;:::-;19290:6;19283:5;19279:18;19272:77;19199:161;16880:2487;;;;:::o;19373:690::-;19469:6;19477;19526:2;19514:9;19505:7;19501:23;19497:32;19494:119;;;19532:79;;:::i;:::-;19494:119;19680:1;19669:9;19665:17;19652:31;19710:18;19702:6;19699:30;19696:117;;;19732:79;;:::i;:::-;19696:117;19837:81;19910:7;19901:6;19890:9;19886:22;19837:81;:::i;:::-;19827:91;;19623:305;19967:2;19993:53;20038:7;20029:6;20018:9;20014:22;19993:53;:::i;:::-;19983:63;;19938:118;19373:690;;;;;:::o;20069:137::-;20159:6;20193:5;20187:12;20177:22;;20069:137;;;:::o;20212:207::-;20334:11;20368:6;20363:3;20356:19;20408:4;20403:3;20399:14;20384:29;;20212:207;;;;:::o;20425:155::-;20515:4;20538:3;20530:11;;20568:4;20563:3;20559:14;20551:22;;20425:155;;;:::o;20636:1028::-;20741:3;20777:4;20772:3;20768:14;20864:4;20857:5;20853:16;20847:23;20917:3;20911:4;20907:14;20900:4;20895:3;20891:14;20884:38;20943:73;21011:4;20997:12;20943:73;:::i;:::-;20935:81;;20792:235;21111:4;21104:5;21100:16;21094:23;21164:3;21158:4;21154:14;21147:4;21142:3;21138:14;21131:38;21190:73;21258:4;21244:12;21190:73;:::i;:::-;21182:81;;21037:237;21363:4;21356:5;21352:16;21346:23;21382:63;21439:4;21434:3;21430:14;21416:12;21382:63;:::i;:::-;21284:171;21545:4;21538:5;21534:16;21528:23;21564:63;21621:4;21616:3;21612:14;21598:12;21564:63;:::i;:::-;21465:172;21654:4;21647:11;;20746:918;20636:1028;;;;:::o;21670:248::-;21785:10;21820:92;21908:3;21900:6;21820:92;:::i;:::-;21806:106;;21670:248;;;;:::o;21924:136::-;22017:4;22049;22044:3;22040:14;22032:22;;21924:136;;;:::o;22120:1095::-;22285:3;22314:77;22385:5;22314:77;:::i;:::-;22407:109;22509:6;22504:3;22407:109;:::i;:::-;22400:116;;22542:3;22587:4;22579:6;22575:17;22570:3;22566:27;22617:79;22690:5;22617:79;:::i;:::-;22719:7;22750:1;22735:435;22760:6;22757:1;22754:13;22735:435;;;22831:9;22825:4;22821:20;22816:3;22809:33;22882:6;22876:13;22910:110;23015:4;23000:13;22910:110;:::i;:::-;22902:118;;23043:83;23119:6;23043:83;:::i;:::-;23033:93;;23155:4;23150:3;23146:14;23139:21;;22795:375;22782:1;22779;22775:9;22770:14;;22735:435;;;22739:14;23186:4;23179:11;;23206:3;23199:10;;22290:925;;;;;22120:1095;;;;:::o;23221:465::-;23410:4;23448:2;23437:9;23433:18;23425:26;;23497:9;23491:4;23487:20;23483:1;23472:9;23468:17;23461:47;23525:154;23674:4;23665:6;23525:154;:::i;:::-;23517:162;;23221:465;;;;:::o;23692:118::-;23779:24;23797:5;23779:24;:::i;:::-;23774:3;23767:37;23692:118;;:::o;23816:222::-;23909:4;23947:2;23936:9;23932:18;23924:26;;23960:71;24028:1;24017:9;24013:17;24004:6;23960:71;:::i;:::-;23816:222;;;;:::o;24044:474::-;24112:6;24120;24169:2;24157:9;24148:7;24144:23;24140:32;24137:119;;;24175:79;;:::i;:::-;24137:119;24295:1;24320:53;24365:7;24356:6;24345:9;24341:22;24320:53;:::i;:::-;24310:63;;24266:117;24422:2;24448:53;24493:7;24484:6;24473:9;24469:22;24448:53;:::i;:::-;24438:63;;24393:118;24044:474;;;;;:::o;24524:109::-;24605:21;24620:5;24605:21;:::i;:::-;24600:3;24593:34;24524:109;;:::o;24639:210::-;24726:4;24764:2;24753:9;24749:18;24741:26;;24777:65;24839:1;24828:9;24824:17;24815:6;24777:65;:::i;:::-;24639:210;;;;:::o;24855:142::-;24950:6;24984:5;24978:12;24968:22;;24855:142;;;:::o;25003:212::-;25130:11;25164:6;25159:3;25152:19;25204:4;25199:3;25195:14;25180:29;;25003:212;;;;:::o;25221:160::-;25316:4;25339:3;25331:11;;25369:4;25364:3;25360:14;25352:22;;25221:160;;;:::o;25447:2268::-;25562:3;25598:6;25593:3;25589:16;25689:4;25682:5;25678:16;25672:23;25708:63;25765:4;25760:3;25756:14;25742:12;25708:63;:::i;:::-;25615:166;25867:4;25860:5;25856:16;25850:23;25920:3;25914:4;25910:14;25903:4;25898:3;25894:14;25887:38;25946:73;26014:4;26000:12;25946:73;:::i;:::-;25938:81;;25791:239;26120:4;26113:5;26109:16;26103:23;26139:63;26196:4;26191:3;26187:14;26173:12;26139:63;:::i;:::-;26040:172;26305:4;26298:5;26294:16;26288:23;26324:63;26381:4;26376:3;26372:14;26358:12;26324:63;:::i;:::-;26222:175;26480:4;26473:5;26469:16;26463:23;26499:63;26556:4;26551:3;26547:14;26533:12;26499:63;:::i;:::-;26407:165;26667:4;26660:5;26656:16;26650:23;26720:3;26714:4;26710:14;26703:4;26698:3;26694:14;26687:38;26746:103;26844:4;26830:12;26746:103;:::i;:::-;26738:111;;26582:278;26956:4;26949:5;26945:16;26939:23;27009:3;27003:4;26999:14;26992:4;26987:3;26983:14;26976:38;27035:97;27127:4;27113:12;27035:97;:::i;:::-;27027:105;;26870:273;27231:4;27224:5;27220:16;27214:23;27250:57;27301:4;27296:3;27292:14;27278:12;27250:57;:::i;:::-;27153:164;27407:6;27400:5;27396:18;27390:25;27428:65;27485:6;27480:3;27476:16;27462:12;27428:65;:::i;:::-;27327:176;27592:6;27585:5;27581:18;27575:25;27613:65;27670:6;27665:3;27661:16;27647:12;27613:65;:::i;:::-;27513:175;27705:4;27698:11;;25567:2148;25447:2268;;;;:::o;27721:268::-;27846:10;27881:102;27979:3;27971:6;27881:102;:::i;:::-;27867:116;;27721:268;;;;:::o;27995:141::-;28093:4;28125;28120:3;28116:14;28108:22;;27995:141;;;:::o;28206:1135::-;28381:3;28410:82;28486:5;28410:82;:::i;:::-;28508:114;28615:6;28610:3;28508:114;:::i;:::-;28501:121;;28648:3;28693:4;28685:6;28681:17;28676:3;28672:27;28723:84;28801:5;28723:84;:::i;:::-;28830:7;28861:1;28846:450;28871:6;28868:1;28865:13;28846:450;;;28942:9;28936:4;28932:20;28927:3;28920:33;28993:6;28987:13;29021:120;29136:4;29121:13;29021:120;:::i;:::-;29013:128;;29164:88;29245:6;29164:88;:::i;:::-;29154:98;;29281:4;29276:3;29272:14;29265:21;;28906:390;28893:1;28890;28886:9;28881:14;;28846:450;;;28850:14;29312:4;29305:11;;29332:3;29325:10;;28386:955;;;;;28206:1135;;;;:::o;29347:485::-;29546:4;29584:2;29573:9;29569:18;29561:26;;29633:9;29627:4;29623:20;29619:1;29608:9;29604:17;29597:47;29661:164;29820:4;29811:6;29661:164;:::i;:::-;29653:172;;29347:485;;;;:::o;29838:112::-;29891:7;29920:24;29938:5;29920:24;:::i;:::-;29909:35;;29838:112;;;:::o;29956:154::-;30045:40;30079:5;30045:40;:::i;:::-;30038:5;30035:51;30025:79;;30100:1;30097;30090:12;30025:79;29956:154;:::o;30116:171::-;30178:5;30216:6;30203:20;30194:29;;30232:49;30275:5;30232:49;:::i;:::-;30116:171;;;;:::o;30293:361::-;30368:6;30417:2;30405:9;30396:7;30392:23;30388:32;30385:119;;;30423:79;;:::i;:::-;30385:119;30543:1;30568:69;30629:7;30620:6;30609:9;30605:22;30568:69;:::i;:::-;30558:79;;30514:133;30293:361;;;;:::o;30660:60::-;30688:3;30709:5;30702:12;;30660:60;;;:::o;30726:142::-;30776:9;30809:53;30827:34;30836:24;30854:5;30836:24;:::i;:::-;30827:34;:::i;:::-;30809:53;:::i;:::-;30796:66;;30726:142;;;:::o;30874:126::-;30924:9;30957:37;30988:5;30957:37;:::i;:::-;30944:50;;30874:126;;;:::o;31006:142::-;31072:9;31105:37;31136:5;31105:37;:::i;:::-;31092:50;;31006:142;;;:::o;31154:163::-;31257:53;31304:5;31257:53;:::i;:::-;31252:3;31245:66;31154:163;;:::o;31323:254::-;31432:4;31470:2;31459:9;31455:18;31447:26;;31483:87;31567:1;31556:9;31552:17;31543:6;31483:87;:::i;:::-;31323:254;;;;:::o;31583:169::-;31667:11;31701:6;31696:3;31689:19;31741:4;31736:3;31732:14;31717:29;;31583:169;;;;:::o;31758:173::-;31898:25;31894:1;31886:6;31882:14;31875:49;31758:173;:::o;31937:366::-;32079:3;32100:67;32164:2;32159:3;32100:67;:::i;:::-;32093:74;;32176:93;32265:3;32176:93;:::i;:::-;32294:2;32289:3;32285:12;32278:19;;31937:366;;;:::o;32309:419::-;32475:4;32513:2;32502:9;32498:18;32490:26;;32562:9;32556:4;32552:20;32548:1;32537:9;32533:17;32526:47;32590:131;32716:4;32590:131;:::i;:::-;32582:139;;32309:419;;;:::o;32734:175::-;32874:27;32870:1;32862:6;32858:14;32851:51;32734:175;:::o;32915:366::-;33057:3;33078:67;33142:2;33137:3;33078:67;:::i;:::-;33071:74;;33154:93;33243:3;33154:93;:::i;:::-;33272:2;33267:3;33263:12;33256:19;;32915:366;;;:::o;33287:419::-;33453:4;33491:2;33480:9;33476:18;33468:26;;33540:9;33534:4;33530:20;33526:1;33515:9;33511:17;33504:47;33568:131;33694:4;33568:131;:::i;:::-;33560:139;;33287:419;;;:::o;33712:180::-;33760:77;33757:1;33750:88;33857:4;33854:1;33847:15;33881:4;33878:1;33871:15;33898:180;33946:77;33943:1;33936:88;34043:4;34040:1;34033:15;34067:4;34064:1;34057:15;34084:320;34128:6;34165:1;34159:4;34155:12;34145:22;;34212:1;34206:4;34202:12;34233:18;34223:81;;34289:4;34281:6;34277:17;34267:27;;34223:81;34351:2;34343:6;34340:14;34320:18;34317:38;34314:84;;;34370:18;;:::i;:::-;34314:84;34135:269;34084:320;;;:::o;34410:182::-;34550:34;34546:1;34538:6;34534:14;34527:58;34410:182;:::o;34598:366::-;34740:3;34761:67;34825:2;34820:3;34761:67;:::i;:::-;34754:74;;34837:93;34926:3;34837:93;:::i;:::-;34955:2;34950:3;34946:12;34939:19;;34598:366;;;:::o;34970:419::-;35136:4;35174:2;35163:9;35159:18;35151:26;;35223:9;35217:4;35213:20;35209:1;35198:9;35194:17;35187:47;35251:131;35377:4;35251:131;:::i;:::-;35243:139;;34970:419;;;:::o;35395:226::-;35535:34;35531:1;35523:6;35519:14;35512:58;35604:9;35599:2;35591:6;35587:15;35580:34;35395:226;:::o;35627:366::-;35769:3;35790:67;35854:2;35849:3;35790:67;:::i;:::-;35783:74;;35866:93;35955:3;35866:93;:::i;:::-;35984:2;35979:3;35975:12;35968:19;;35627:366;;;:::o;35999:419::-;36165:4;36203:2;36192:9;36188:18;36180:26;;36252:9;36246:4;36242:20;36238:1;36227:9;36223:17;36216:47;36280:131;36406:4;36280:131;:::i;:::-;36272:139;;35999:419;;;:::o;36424:137::-;36478:5;36509:6;36503:13;36494:22;;36525:30;36549:5;36525:30;:::i;:::-;36424:137;;;;:::o;36567:345::-;36634:6;36683:2;36671:9;36662:7;36658:23;36654:32;36651:119;;;36689:79;;:::i;:::-;36651:119;36809:1;36834:61;36887:7;36878:6;36867:9;36863:22;36834:61;:::i;:::-;36824:71;;36780:125;36567:345;;;;:::o;36918:167::-;37058:19;37054:1;37046:6;37042:14;37035:43;36918:167;:::o;37091:366::-;37233:3;37254:67;37318:2;37313:3;37254:67;:::i;:::-;37247:74;;37330:93;37419:3;37330:93;:::i;:::-;37448:2;37443:3;37439:12;37432:19;;37091:366;;;:::o;37463:419::-;37629:4;37667:2;37656:9;37652:18;37644:26;;37716:9;37710:4;37706:20;37702:1;37691:9;37687:17;37680:47;37744:131;37870:4;37744:131;:::i;:::-;37736:139;;37463:419;;;:::o;37888:180::-;37936:77;37933:1;37926:88;38033:4;38030:1;38023:15;38057:4;38054:1;38047:15;38074:233;38113:3;38136:24;38154:5;38136:24;:::i;:::-;38127:33;;38182:66;38175:5;38172:77;38169:103;;;38252:18;;:::i;:::-;38169:103;38299:1;38292:5;38288:13;38281:20;;38074:233;;;:::o;38313:225::-;38453:34;38449:1;38441:6;38437:14;38430:58;38522:8;38517:2;38509:6;38505:15;38498:33;38313:225;:::o;38544:366::-;38686:3;38707:67;38771:2;38766:3;38707:67;:::i;:::-;38700:74;;38783:93;38872:3;38783:93;:::i;:::-;38901:2;38896:3;38892:12;38885:19;;38544:366;;;:::o;38916:419::-;39082:4;39120:2;39109:9;39105:18;39097:26;;39169:9;39163:4;39159:20;39155:1;39144:9;39140:17;39133:47;39197:131;39323:4;39197:131;:::i;:::-;39189:139;;38916:419;;;:::o",
  "source": "// !! This contract is not audited. Do not use in production!!\n\n//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n// Imports\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // ERC20 interface\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; //  Ownable.sol\nimport \"./Factory.sol\"; // Factory Contract\n\nimport \"./lib/IDO.sol\";\n\n// Portolio contract for tracking the token distribution\ncontract Portfolio is Ownable {\n    // Mapping for user address to Component struct\n    mapping(address => IDOLib.Investment[]) internal usersInvesments;\n\n    // Mapping for created ERC20 tokens\n    mapping(address => IDOLib.ERC20[]) internal userERC20s;\n\n    // Factory contract\n    Factory public factoryContract;\n\n    // Token Creator Contract\n    address public tokenCreator;\n\n    constructor() {}\n\n    // Setter function for factory contract\n    function setFactoryContract(Factory _factory) external onlyOwner {\n        factoryContract = _factory;\n    }\n\n    // Msg.sender must be valid sale for adding to portfolio\n    modifier isSaleValid() {\n        require(factoryContract.isSaleValid(msg.sender), \"Sale is not valid\");\n        _;\n    }\n\n    // Msg.sender needs to be token creator account for ERC20 portfolio\n    modifier isTokenCreator() {\n        require(\n            msg.sender == tokenCreator,\n            \"Only token creator can add to portfolio\"\n        );\n        _;\n    }\n\n    // Getter function for msg.sender portfolio\n    function getMyPortfolio()\n        external\n        view\n        returns (IDOLib.Investment[] memory)\n    {\n        return usersInvesments[msg.sender];\n    }\n\n    // Getter function for msg.sender ERC20 tokens\n    function getMyERC20s() external view returns (IDOLib.ERC20[] memory) {\n        return userERC20s[msg.sender];\n    }\n\n    // Getter function for individual investment\n    function getInvestment(uint256 _id)\n        external\n        view\n        returns (IDOLib.Investment memory)\n    {\n        require(\n            usersInvesments[msg.sender].length > 0,\n            \"User has no investments\"\n        );\n        require(\n            _id < usersInvesments[msg.sender].length,\n            \"Investment does not exist\"\n        );\n\n        return usersInvesments[msg.sender][_id];\n    }\n\n    // Getter function for check if invesment already exists\n    function isInvesmentExists(address user, uint256 _saleId)\n        external\n        view\n        returns (bool)\n    {\n        uint256 length = usersInvesments[user].length;\n\n        if (length == 0) return false;\n\n        // Local variable for isHere\n        bool isHere = false;\n\n        // For gas optimization\n        uint256 index;\n        for (index; index < length; index++) {\n            if (usersInvesments[user][index].saleId == _saleId) {\n                isHere = true;\n            }\n        }\n\n        return isHere;\n    }\n\n    // Setter function for set new sale\n    function addPortfolio(IDOLib.Investment memory _invesment, address user)\n        external\n        isSaleValid\n    {\n        usersInvesments[user].push(_invesment);\n    }\n\n    // Update portolio for user\n    function updatePortolio(\n        address user,\n        uint256 saleID,\n        uint256 newWithdrawnAmount,\n        bool[] memory newPortionArray\n    ) external isSaleValid {\n        uint256 length = usersInvesments[user].length;\n\n        // Local variable for index\n        uint256 index;\n        for (index; index < length; index++) {\n            if (usersInvesments[user][index].saleId == saleID) {\n                usersInvesments[user][index]\n                    .withdrawnAmount = newWithdrawnAmount;\n                usersInvesments[user][index]\n                    .isPortionWithdrawn = newPortionArray;\n                if (isFinished(newPortionArray))\n                    usersInvesments[user][index].isFinished = true;\n            }\n        }\n    }\n\n    // Internal function for set isFinished variable\n    function isFinished(bool[] memory arr) internal pure returns (bool) {\n        bool finished = true;\n\n        uint256 length = arr.length;\n        uint256 index;\n        for (index; index < length; index++) {\n            if (!arr[index]) {\n                finished = false;\n            }\n        }\n\n        return finished;\n    }\n\n    // External function for add new ERC20 token to portfolio\n    function addERC20(\n        address user,\n        string memory name,\n        string memory symbol,\n        uint256 totalSupply,\n        address tokenAddress\n    ) external isTokenCreator {\n        IDOLib.ERC20 memory newERC20 = IDOLib.ERC20(\n            name,\n            symbol,\n            totalSupply,\n            tokenAddress\n        );\n\n        userERC20s[user].push(newERC20);\n    }\n\n    // Setter function for set token creator\n    function setTokenCreator(address _tokenCreator) external onlyOwner {\n        tokenCreator = _tokenCreator;\n    }\n}\n",
  "sourcePath": "/Users/mehmetberatozturk/Documents/Github/ido-for-everyone/contracts/Portfolio.sol",
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB748D7F8f4B9fCC6E85eB8aA6c8061A4242E3588",
      "transactionHash": "0xf4e1490c2273103d50f6132fa8bc081791138bd58900e6a6d33b569867a3b545"
    },
    "43113": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4f0aE01450191E36A498652F6066e0575022e6b1",
      "transactionHash": "0x68a12245e272896453f8f1ec73b59fdef2246545040ea6d2c634238e74b92419"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-08T14:04:36.698Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}